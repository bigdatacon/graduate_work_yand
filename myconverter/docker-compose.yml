version: "3.7"

services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres_movies
    env_file:
      - db.env
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - movies_network

  django:
    build:
      context: mysite
      dockerfile: Dockerfile
    container_name: django_movies
    ports:
      - "8000:8000"
    env_file:
      - ./mysite/.env
    volumes:
      - static_volume:/data/static
    networks:
      - movies_network
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - postgres

  movies_streaming_converter_api:
    build:
      context: converter
      dockerfile: Dockerfile
    volumes:
      - ./converter/files:/data/static
    networks:
      - movies_network
    command: ["python", "modelhandler.py", "--target-host", "django"]
    depends_on:
      - postgres

  converter_fast_api:
    build:
      context: fast_api
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    env_file:
      - ./fast_api/.env
    networks:
      - movies_network
    command: ["python", "main.py"]
    depends_on:
      - postgres

  airflow_scheduler:
    image: docker.io/bitnami/airflow-scheduler:2
    restart: always
    container_name: airflow_scheduler
    volumes:
      airflow_scheduler_data:/airflow/scheduler_data
      ./dags/dags:/airflow/dags
      ./dags/requirements.txt:/airflow/requirements.txt


volumes:
  static_volume:
  movies_streaming_converter_api:
  airflow_scheduler_data:

networks:
  movies_network:
